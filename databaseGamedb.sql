-- MySQL Script generated by MySQL Workbench
-- Sat 11 Nov 2017 05:17:35 PM EST
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema DatabaseGame
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema DatabaseGame
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `DatabaseGame` DEFAULT CHARACTER SET utf8 ;
USE `DatabaseGame` ;

-- -----------------------------------------------------
-- Table `DatabaseGame`.`entity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DatabaseGame`.`entity` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `health` INT NOT NULL DEFAULT 10,
  `attack` INT NULL DEFAULT 1,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DatabaseGame`.`hero_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DatabaseGame`.`hero_type` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `description` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DatabaseGame`.`player`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DatabaseGame`.`player` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DatabaseGame`.`hero`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DatabaseGame`.`hero` (
  `id` INT NOT NULL,
  `entityId` INT NOT NULL,
  `typeId` INT NULL,
  `playerId` INT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `entityId_UNIQUE` (`entityId` ASC),
  INDEX `fk_hero_hero_type1_idx` (`typeId` ASC),
  INDEX `fk_hero_player1_idx` (`playerId` ASC),
  CONSTRAINT `fk_hero_entity`
    FOREIGN KEY (`entityId`)
    REFERENCES `DatabaseGame`.`entity` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_hero_hero_type1`
    FOREIGN KEY (`typeId`)
    REFERENCES `DatabaseGame`.`hero_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_hero_player1`
    FOREIGN KEY (`playerId`)
    REFERENCES `DatabaseGame`.`player` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DatabaseGame`.`monster_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DatabaseGame`.`monster_type` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `monster_typecol` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DatabaseGame`.`monster`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DatabaseGame`.`monster` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `entityId` INT NOT NULL,
  `typeId` INT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `entityId_UNIQUE` (`entityId` ASC),
  INDEX `fk_monster_monster_type1_idx` (`typeId` ASC),
  CONSTRAINT `fk_monster_entity1`
    FOREIGN KEY (`entityId`)
    REFERENCES `DatabaseGame`.`entity` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_monster_monster_type1`
    FOREIGN KEY (`typeId`)
    REFERENCES `DatabaseGame`.`monster_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DatabaseGame`.`item`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DatabaseGame`.`item` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `description` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DatabaseGame`.`loot`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DatabaseGame`.`loot` (
  `id` INT NOT NULL,
  `monsterId` INT NULL,
  `itemId` INT NULL,
  `dropChance` FLOAT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Loot_monster1_idx` (`monsterId` ASC),
  INDEX `fk_Loot_item1_idx` (`itemId` ASC),
  CONSTRAINT `fk_Loot_monster1`
    FOREIGN KEY (`monsterId`)
    REFERENCES `DatabaseGame`.`monster` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Loot_item1`
    FOREIGN KEY (`itemId`)
    REFERENCES `DatabaseGame`.`item` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DatabaseGame`.`inventory`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DatabaseGame`.`inventory` (
  `id` INT NOT NULL,
  `heroId` INT NULL,
  `itemId` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_inventory_hero1_idx` (`heroId` ASC),
  INDEX `fk_inventory_item1_idx` (`itemId` ASC),
  CONSTRAINT `fk_inventory_hero1`
    FOREIGN KEY (`heroId`)
    REFERENCES `DatabaseGame`.`hero` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_inventory_item1`
    FOREIGN KEY (`itemId`)
    REFERENCES `DatabaseGame`.`item` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DatabaseGame`.`monsterTemplate`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DatabaseGame`.`monsterTemplate` (
  `id` INT NOT NULL,
  `health` VARCHAR(45) NULL,
  `attack` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `DatabaseGame`.`battle`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DatabaseGame`.`battle` (
  `id` INT NOT NULL,
  `startTime` TIMESTAMP NULL,
  `endTime` TIMESTAMP NULL,
  `winningEntityId` INT NULL,
  `losingEntityId` INT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DatabaseGame`.`action`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DatabaseGame`.`action` (
  `id` INT NOT NULL,
  `entityId` INT NULL,
  `battleId` INT NULL,
  `battleActionNumber` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_action_entity1_idx` (`entityId` ASC),
  INDEX `fk_action_battle1_idx` (`battleId` ASC),
  CONSTRAINT `fk_action_entity1`
    FOREIGN KEY (`entityId`)
    REFERENCES `DatabaseGame`.`entity` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_action_battle1`
    FOREIGN KEY (`battleId`)
    REFERENCES `DatabaseGame`.`battle` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DatabaseGame`.`action_attack`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DatabaseGame`.`action_attack` (
  `id` INT NOT NULL,
  `actionId` INT NULL,
  `damage` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_action_attack_action1_idx` (`actionId` ASC),
  CONSTRAINT `fk_action_attack_action1`
    FOREIGN KEY (`actionId`)
    REFERENCES `DatabaseGame`.`action` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `DatabaseGame`.`action_die`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DatabaseGame`.`action_die` (
  `id` INT NOT NULL,
  `actionId` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_action_die_action1_idx` (`actionId` ASC),
  CONSTRAINT `fk_action_die_action1`
    FOREIGN KEY (`actionId`)
    REFERENCES `DatabaseGame`.`action` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DatabaseGame`.`action_dropItem`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DatabaseGame`.`action_dropItem` (
  `id` INT NOT NULL,
  `actionId` INT NULL,
  `itemId` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_action_dropItem_action1_idx` (`actionId` ASC),
  INDEX `fk_action_dropItem_item1_idx` (`itemId` ASC),
  CONSTRAINT `fk_action_dropItem_action1`
    FOREIGN KEY (`actionId`)
    REFERENCES `DatabaseGame`.`action` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_action_dropItem_item1`
    FOREIGN KEY (`itemId`)
    REFERENCES `DatabaseGame`.`item` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `DatabaseGame`.`loot_monster_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DatabaseGame`.`loot_monster_type` (
  `id` INT NOT NULL,
  `itemId` INT NULL,
  `monster_typeId` INT NULL,
  `dropChance` FLOAT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_loot_monster_type_item1_idx` (`itemId` ASC),
  INDEX `fk_loot_monster_type_monster_type1_idx` (`monster_typeId` ASC),
  CONSTRAINT `fk_loot_monster_type_item1`
    FOREIGN KEY (`itemId`)
    REFERENCES `DatabaseGame`.`item` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_loot_monster_type_monster_type1`
    FOREIGN KEY (`monster_typeId`)
    REFERENCES `DatabaseGame`.`monster_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DatabaseGame`.`playerStats`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DatabaseGame`.`playerStats` (
  `id` INT NOT NULL,
  `startTime` TIMESTAMP NULL,
  `inGameTime` TIME NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
